// Sample poem generation functionality
function generateSamplePoem() {
    const poems = [
        {
            title: "Digital Dreams",
            content: "In circuits deep where thoughts collide,<br>Where silicon dreams and words reside,<br>A poet born of code and light,<br>Weaves verses through the endless night."
        },
        {
            title: "Artificial Muse",
            content: "Algorithms dance with rhythm and rhyme,<br>Creating beauty beyond space and time,<br>Each word calculated, yet somehow free,<br>A symphony of technology."
        },
        {
            title: "Electric Inspiration",
            content: "From data streams and neural nets,<br>Emerge the verses no one forgets,<br>AI whispers secrets of the heart,<br>Where science meets the poet's art."
        },
        {
            title: "Binary Ballad",
            content: "Ones and zeros form a song,<br>Of love and loss, of right and wrong,<br>In digital realms where poets dwell,<br>Stories that machines can tell."
        }
    ];
    
    const randomPoem = poems[Math.floor(Math.random() * poems.length)];
    const poemElement = document.getElementById('sample-poem');
    
    // Add fade effect
    poemElement.style.opacity = '0';
    
    setTimeout(() => {
        poemElement.innerHTML = `
            <h4 style="color: #667eea; margin-bottom: 15px; font-size: 1.1rem;">${randomPoem.title}</h4>
            <p><em>${randomPoem.content}</em></p>
        `;
        poemElement.style.opacity = '1';
    }, 300);
}

// Smooth scrolling for navigation links
document.addEventListener('DOMContentLoaded', function() {
    const navLinks = document.querySelectorAll('.nav-menu a[href^="#"]');
    
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href');
            const targetSection = document.querySelector(targetId);
            
            if (targetSection) {
                const headerHeight = document.querySelector('.header').offsetHeight;
                const targetPosition = targetSection.offsetTop - headerHeight;
                
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });
            }
        });
    });
});

// Add scroll effect to header
window.addEventListener('scroll', function() {
    const header = document.querySelector('.header');
    if (window.scrollY > 100) {
        header.style.background = 'rgba(255, 255, 255, 0.98)';
        header.style.boxShadow = '0 2px 30px rgba(0, 0, 0, 0.15)';
    } else {
        header.style.background = 'rgba(255, 255, 255, 0.95)';
        header.style.boxShadow = '0 2px 20px rgba(0, 0, 0, 0.1)';
    }
});

// Add animation to feature cards when they come into view
const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
};

const observer = new IntersectionObserver(function(entries) {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
        }
    });
}, observerOptions);

// Observe feature cards and benefit items
document.addEventListener('DOMContentLoaded', function() {
    const animatedElements = document.querySelectorAll('.feature-card, .benefit');
    
    animatedElements.forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(30px)';
        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(el);
    });
});

// Add typing effect to hero title (optional enhancement)
function typeWriter(element, text, speed = 100) {
    let i = 0;
    element.innerHTML = '';
    
    function type() {
        if (i < text.length) {
            element.innerHTML += text.charAt(i);
            i++;
            setTimeout(type, speed);
        }
    }
    
    type();
}

// Initialize typing effect on page load (optional)
document.addEventListener('DOMContentLoaded', function() {
    const heroTitle = document.querySelector('.hero-content h2');
    if (heroTitle) {
        const originalText = heroTitle.textContent;
        // Uncomment the line below to enable typing effect
        // typeWriter(heroTitle, originalText, 80);
    }
});
